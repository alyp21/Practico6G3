
package Ejercicio2;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alybe
 */
public class BuscarPorNombre extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarPorNombre
     */
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int f, int c){
            return false;
        }
    };
    public BuscarPorNombre() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlListadoPorNombre = new javax.swing.JLabel();
        jlDescrip = new javax.swing.JLabel();
        jtfDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPorNombre = new javax.swing.JTable();

        setClosable(true);

        jlListadoPorNombre.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlListadoPorNombre.setText("Listado por Nombre");

        jlDescrip.setText("Ingrese la descripcion:");

        jtfDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfDescripcionKeyReleased(evt);
            }
        });

        jtPorNombre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripcion", "Precio", "Rubro", "Stock"
            }
        ));
        jScrollPane1.setViewportView(jtPorNombre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlDescrip)
                            .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jlListadoPorNombre)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jlListadoPorNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlDescrip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescripcionKeyReleased
        borrarFilas();
        for (ProductoSA produc:Menu.listaProductos){
            if (produc.getDescripcion().startsWith(jtfDescripcion.getText()));
            modelo.addRow(new Object[]{
                produc.getCodigo(),
                produc.getDescripcion(),
                produc.getPrecio(),
                produc.getRubro(),
                produc.getStock()

            });
        }
    }//GEN-LAST:event_jtfDescripcionKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlDescrip;
    private javax.swing.JLabel jlListadoPorNombre;
    private javax.swing.JTable jtPorNombre;
    private javax.swing.JTextField jtfDescripcion;
    // End of variables declaration//GEN-END:variables

    private void armarCabecera(){
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Precio");
        modelo.addColumn("Rubro");
        modelo.addColumn("Stock");
        jtPorNombre.setModel(modelo);
    }
    
    private void borrarFilas(){
        int f = jtPorNombre.getRowCount()-1;
        for(;f>=0;f--){
            modelo.removeRow(f);
        }
    }
}
